{"version":3,"sources":["features/dpTable/tableSlice.ts","features/condition/conditionSlice.ts","features/theme/themeSlice.ts","utils/store.ts","utils/theme.ts","utils/typography.ts","utils/shadows.ts","features/condition/Knapsack.tsx","features/condition/Form.tsx","features/condition/Evaluation.tsx","features/dpTable/Square.tsx","features/dpTable/DpTable.tsx","component/Contents.tsx","features/theme/ThemeSwitch.tsx","component/Header.tsx","component/Footer.tsx","component/App.tsx","index.tsx"],"names":["initialSquare","worth","isInProcess","isProcessed","isReffered","isBasis","includedItems","initialState","Array","fill","map","_","i","tableSlice","createSlice","name","reducers","setWorth","state","action","payload","j","setInProcess","setProcessed","setReffered","setBasis","setTable","resetTable","items","capacity","maxWorth","eval","conditionSlice","addItem","push","delItem","index","findIndex","item","id","splice","setIncludedAllFalse","forEach","setCapacity","setMaxWorth","setEval","resetCondition","weight","clearCondition","isDarkTheme","window","matchMedia","matches","themeSlice","toggleTheme","rootReducer","combineReducers","theme","reducer","table","condition","store","configureStore","baseConfig","direction","typography","h1","fontWeight","fontSize","lineHeight","letterSpacing","h2","h3","h4","h5","h6","overline","fontFamily","breakpoints","values","xs","sm","md","lg","xl","props","MuiTextField","margin","overrides","MuiLinearProgress","root","borderRadius","overflow","MuiListItemIcon","minWidth","themeConfigs","mode","palette","type","active","colors","grey","background","default","paper","primary","main","light","dark","secondary","error","red","success","lightGreen","text","shadows","hover","selected","disabled","disabledBackground","focus","themeConfig","find","c","responsiveFontSizes","createMuiTheme","useStyles","makeStyles","createStyles","icon","marginRight","Knapsack","classes","dispatch","useDispatch","useSelector","isMobile","useContext","SizeContext","marks","useMemo","value","label","toString","handleChange","useCallback","actions","Card","Box","p","Grid","container","spacing","className","Typography","variant","gutterBottom","pr","Slider","defaultValue","valueLabelDisplay","step","min","max","onChange","buttonBox","textField","Form","enqueueSnackbar","useSnackbar","useForm","control","handleSubmit","errors","reset","onSuccess","newItem","Date","toISOString","parseInt","onError","rules","required","pattern","message","as","TextField","fullWidth","helperText","justify","IconButton","color","onClick","Evaluation","comment","Paper","alignItems","backgroundColor","tableTd","border","divider","textAlign","chipItem","marginBottom","chipSummary","Square","Tooltip","title","length","align","pt","pb","Chip","Divider","reduce","acc","cur","paperTitle","marginLeft","dpTable","width","tableLayout","borderCollapse","buttons","marginTop","trData","height","thIndex","maxWidth","thColumn","tableLabel","emptyChip","paddingLeft","paddingRight","down","itemChip","animationName","animationDuration","animationTimingFunction","opacity","DpTable","updateMaxWorth","newMaxworth","updateEval","newEval","updateProcessed","newProcessed","updateTable","newTable","handleDelete","recUpdate","prevTable","interval","prevCurr","prevPrev","prevRef","prevBasis","row","slice","newCurr","newPrev","newRef","newBasis","newWorth","setTimeout","scanTable","prevCoord","renderSquare","status","renderRow","undefined","onDelete","square","renderColumnNameRow","column","Button","mainContents","Contents","Container","ThemeSwitch","Switch","checked","inputProps","flexGrow","menu","display","justifyContent","Header","AppBar","position","elevation","link","textDecoration","Footer","href","React","createContext","isDesktop","StyledApp","useMediaQuery","useTheme","up","ThemeProvider","Provider","CssBaseline","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1a70c0f.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Item } from '../condition/conditionSlice';\n\nexport type Status = {\n  worth: number;\n  isInProcess: boolean;\n  isProcessed: boolean;\n  isReffered: boolean;\n  isBasis: boolean;\n  includedItems: Item[];\n};\n\nexport type Coordiante = {\n  i: number;\n  j: number;\n};\n\nconst initialSquare: Status = {\n  worth: 0,\n  isInProcess: false,\n  isProcessed: false,\n  isReffered: false,\n  isBasis: false,\n  includedItems: [],\n};\n\nconst initialState: Status[][] = Array(11)\n  .fill(0)\n  .map((_, i) => {\n    if (i === 0) {\n      return Array(11).fill({\n        worth: 0,\n        isInProcess: false,\n        isProcessed: true,\n        isReffered: false,\n        isBasis: false,\n        includedItems: [],\n      });\n    }\n    return Array(11).fill(initialSquare);\n  });\n\nconst tableSlice = createSlice({\n  name: 'table',\n  initialState,\n  reducers: {\n    setWorth: (\n      state,\n      action: PayloadAction<{ i: number; j: number; worth: number }>\n    ) => {\n      state[action.payload.i][action.payload.j].worth = action.payload.worth;\n    },\n    setInProcess: (\n      state,\n      action: PayloadAction<{ i: number; j: number; isInProcess: boolean }>\n    ) => {\n      state[action.payload.i][action.payload.j].isInProcess =\n        action.payload.isInProcess;\n    },\n    setProcessed: (\n      state,\n      action: PayloadAction<{ i: number; j: number; isProcessed: boolean }>\n    ) => {\n      state[action.payload.i][action.payload.j].isProcessed =\n        action.payload.isProcessed;\n    },\n    setReffered: (\n      state,\n      action: PayloadAction<{ i: number; j: number; isReffered: boolean }>\n    ) => {\n      state[action.payload.i][action.payload.j].isReffered =\n        action.payload.isReffered;\n    },\n    setBasis: (\n      state,\n      action: PayloadAction<{ i: number; j: number; isBasis: boolean }>\n    ) => {\n      state[action.payload.i][action.payload.j].isBasis =\n        action.payload.isBasis;\n    },\n    setTable: (_, action: PayloadAction<Status[][]>) => action.payload,\n    resetTable: () => initialState,\n  },\n});\n\nexport default tableSlice;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type Item = {\n  id: string;\n  weight: number;\n  worth: number;\n  isProcessed: boolean;\n};\n\nexport type Eval = 'BEFORE' | 'PROFIT' | 'LOSS' | 'OVER' | 'COMPLETE';\n\nexport type ConditionState = {\n  items: Item[];\n  capacity: number;\n  maxWorth: number;\n  eval: Eval;\n};\n\nconst initialState: ConditionState = {\n  items: [],\n  capacity: 10,\n  maxWorth: 0,\n  eval: 'BEFORE',\n};\n\nconst conditionSlice = createSlice({\n  name: 'condiiton',\n  initialState,\n  reducers: {\n    addItem: (state, action: PayloadAction<Item>) => {\n      state.items.push(action.payload);\n    },\n    delItem: (state, action: PayloadAction<Item>) => {\n      const index = state.items.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      if (index !== -1) {\n        state.items.splice(index, 1);\n      }\n    },\n    setProcessed: (\n      state,\n      action: PayloadAction<{ index: number; isProcessed: boolean }>\n    ) => {\n      state.items[action.payload.index].isProcessed =\n        action.payload.isProcessed;\n    },\n    setIncludedAllFalse: (state) => {\n      state.items.forEach((item) => {\n        item.isProcessed = false;\n      });\n    },\n    setCapacity: (state, action: PayloadAction<number>) => {\n      state.capacity = action.payload;\n    },\n    setMaxWorth: (state, action: PayloadAction<number>) => {\n      state.maxWorth = action.payload;\n    },\n    setEval: (state, action: PayloadAction<Eval>) => {\n      state.eval = action.payload;\n    },\n    resetCondition: (state) => {\n      const resetItems = state.items.map((item) => {\n        return {\n          id: item.id,\n          weight: item.weight,\n          worth: item.worth,\n          isProcessed: false,\n        };\n      });\n      return {\n        items: resetItems,\n        capacity: state.capacity,\n        maxWorth: 0,\n        eval: 'BEFORE',\n      };\n    },\n    clearCondition: () => initialState,\n  },\n});\n\nexport default conditionSlice;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  isDarkTheme: window.matchMedia('(prefers-color-scheme: dark)').matches,\n};\n\nconst themeSlice = createSlice({\n  name: 'theme',\n  initialState,\n  reducers: {\n    toggleTheme: (state) => {\n      return { isDarkTheme: !state.isDarkTheme };\n    },\n  },\n});\n\nexport default themeSlice;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport tableSlice from '../features/dpTable/tableSlice';\nimport conditionSlice from '../features/condition/conditionSlice';\nimport themeSlice from '../features/theme/themeSlice';\n\nconst rootReducer = combineReducers({\n  theme: themeSlice.reducer,\n  table: tableSlice.reducer,\n  condition: conditionSlice.reducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\n// Promiseを返すようにする\n// https://react-redux.js.org/using-react-redux/static-typing#typing-the-usedispatch-hook\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import {\n  createMuiTheme,\n  Theme,\n  colors,\n  responsiveFontSizes,\n  ThemeOptions,\n} from '@material-ui/core';\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette';\nimport { Overrides } from '@material-ui/core/styles/overrides';\nimport { Shadows } from '@material-ui/core/styles/shadows';\nimport { lightGreen, red } from '@material-ui/core/colors';\nimport typography from './typography';\nimport { softShadows, strongShadows } from './shadows';\n\nconst baseConfig: ThemeOptions = {\n  direction: 'ltr',\n  typography,\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 640,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n  props: {\n    MuiTextField: {\n      margin: 'dense',\n    },\n  },\n  overrides: {\n    MuiLinearProgress: {\n      root: {\n        borderRadius: 3,\n        overflow: 'hidden',\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        minWidth: 32,\n      },\n    },\n  },\n};\n\nconst themeConfigs: {\n  mode: 'light' | 'dark';\n  palette: PaletteOptions;\n  shadows: Shadows;\n  overrides?: Overrides;\n}[] = [\n  {\n    mode: 'light',\n    palette: {\n      type: 'light',\n      action: {\n        active: colors.grey[600],\n      },\n      background: {\n        default: '#f5f5f5',\n        paper: '#fafafa',\n      },\n      primary: {\n        main: '#2196f3',\n        light: '#6ec6ff',\n        dark: '#0069c0',\n      },\n      secondary: {\n        main: '#e91e63',\n        light: '#ff6090',\n        dark: '#b0003a',\n      },\n      error: red,\n      success: lightGreen,\n      text: {\n        primary: colors.grey[900],\n        secondary: colors.grey[600],\n      },\n    },\n    shadows: softShadows,\n  },\n  {\n    mode: 'dark',\n    palette: {\n      type: 'dark',\n      action: {\n        active: 'rgba(255, 255, 255, 0.54)',\n        hover: 'rgba(255, 255, 255, 0.04)',\n        selected: 'rgba(255, 255, 255, 0.08)',\n        disabled: 'rgba(255, 255, 255, 0.26)',\n        disabledBackground: 'rgba(255, 255, 255, 0.12)',\n        focus: 'rgba(255, 255, 255, 0.12)',\n      },\n      background: {\n        default: '#1d1c21',\n        paper: '#262529',\n      },\n      primary: {\n        main: '#0288d1',\n        light: '#5eb8ff',\n        dark: '#005b9f',\n      },\n      secondary: {\n        main: '#c2185b',\n        light: '#fa5788',\n        dark: '#8c0032',\n      },\n      error: red,\n      success: lightGreen,\n      text: {\n        primary: colors.grey[300],\n        secondary: colors.grey[500],\n      },\n    },\n    shadows: strongShadows,\n  },\n];\n\nconst theme = (mode: 'light' | 'dark'): Theme => {\n  const themeConfig = themeConfigs.find((c) => c.mode === mode);\n\n  return responsiveFontSizes(createMuiTheme({ ...baseConfig, ...themeConfig }));\n};\n\nexport default theme;\n","export default {\n  h1: {\n    fontWeight: 800,\n    fontSize: 35,\n    lineHeight: 1.3,\n    letterSpacing: '-0.24px',\n  },\n  h2: {\n    fontWeight: 700,\n    fontSize: 29,\n    letterSpacing: '-0.24px',\n  },\n  h3: {\n    fontWeight: 600,\n    fontSize: 24,\n    letterSpacing: '-0.06px',\n  },\n  h4: {\n    fontWeight: 600,\n    fontSize: 20,\n    letterSpacing: '-0.06px',\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px',\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px',\n  },\n  overline: {\n    fontWeight: 800,\n  },\n  fontFamily:\n    '-apple-system, blinkMacSystemFont, Helvetica Neue, Segoe UI, YuGothicM, YuGothic, Meiryo, sans-serif',\n};\n","import { Shadows } from '@material-ui/core/styles/shadows';\n\nexport const softShadows: Shadows = [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)',\n];\n\nexport const strongShadows: Shadows = [\n  'none',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 3px 4px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 2px 2px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 3px 4px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 3px 4px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 4px 6px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 4px 6px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 4px 8px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 5px 8px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 6px 12px -4px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 7px 12px -4px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 6px 16px -4px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 7px 16px -4px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 8px 18px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 9px 18px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 10px 20px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 11px 20px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 12px 22px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 13px 22px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 14px 24px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 16px 28px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 18px 30px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 20px 32px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 22px 34px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 24px 36px -8px rgba(0,0,0,0.50)',\n];\n","import React, { useCallback, useContext, useMemo } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Box, Card, Slider, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ShoppingBasketOutlinedIcon from '@material-ui/icons/ShoppingBasketOutlined';\nimport conditionSlice, { ConditionState } from './conditionSlice';\nimport { RootState } from '../../utils/store';\nimport tableSlice from '../dpTable/tableSlice';\nimport { SizeContext } from '../../component/App';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    icon: {\n      marginRight: '16px',\n    },\n  })\n);\n\nconst Knapsack: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const condition = useSelector<RootState, ConditionState>(\n    (state) => state.condition\n  );\n  const { isMobile } = useContext(SizeContext);\n\n  const marks = useMemo(\n    () =>\n      Array(11)\n        .fill(0)\n        .map((_, i) => {\n          return {\n            value: i,\n            label: i.toString(),\n          };\n        }),\n    []\n  );\n\n  const handleChange = useCallback(\n    (value: number | number[]) => {\n      if (typeof value === 'object') return;\n      dispatch(conditionSlice.actions.setCapacity(value));\n      dispatch(conditionSlice.actions.setEval('BEFORE'));\n      dispatch(tableSlice.actions.resetTable());\n    },\n    [dispatch]\n  );\n\n  return (\n    <Card>\n      <Box p={isMobile ? 2 : 3}>\n        <Grid container spacing={2}>\n          <Grid item xl={1} sm={1} xs={2}>\n            <Box className={classes.icon}>\n              <ShoppingBasketOutlinedIcon />\n            </Box>\n          </Grid>\n          <Grid item xl={11} sm={11} xs={10}>\n            <Typography variant=\"h5\" gutterBottom>\n              ナップサックの容量\n            </Typography>\n            <Box pr={2}>\n              <Slider\n                defaultValue={10}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={1}\n                marks={marks}\n                min={0}\n                max={10}\n                disabled={\n                  condition.eval !== 'BEFORE' && condition.eval !== 'COMPLETE'\n                }\n                onChange={(_, value) => handleChange(value)}\n              />\n            </Box>\n          </Grid>\n        </Grid>{' '}\n      </Box>\n    </Card>\n  );\n};\n\nexport default Knapsack;\n","import React, { useCallback, useContext } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { Box, Card, IconButton } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { useForm, Controller } from 'react-hook-form';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport conditionSlice, { ConditionState, Item } from './conditionSlice';\nimport { RootState } from '../../utils/store';\nimport { SizeContext } from '../../component/App';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    icon: {\n      minWidth: '48px',\n      margin: '16px 16px 16px 0px',\n    },\n    buttonBox: {\n      minWidth: '48px',\n      margin: '4px 0px',\n    },\n    textField: {\n      minWidth: '100px',\n    },\n  })\n);\n\nconst Form: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const { isMobile } = useContext(SizeContext);\n  const { control, handleSubmit, errors, reset } = useForm<Item>();\n  const condition = useSelector<RootState, ConditionState>(\n    (state) => state.condition\n  );\n\n  const onSuccess = useCallback(\n    (item: Item) => {\n      const newItem: Item = {\n        id: new Date().toISOString(),\n        weight:\n          typeof item.weight === 'string'\n            ? parseInt(item.weight, 10)\n            : item.weight,\n        worth:\n          typeof item.worth === 'string'\n            ? parseInt(item.worth, 10)\n            : item.worth,\n        isProcessed: false,\n      };\n      if (condition.items[9]?.weight) {\n        enqueueSnackbar('アイテム数が上限に達しています。', {\n          variant: 'error',\n        });\n        return;\n      }\n      dispatch(conditionSlice.actions.addItem(newItem));\n      enqueueSnackbar('アイテムを追加しました。', { variant: 'success' });\n      reset({ weight: 1, worth: 1 });\n    },\n    [condition.items, dispatch, enqueueSnackbar, reset]\n  );\n\n  const onError = useCallback(() => {\n    enqueueSnackbar('値が不正です。', { variant: 'error' });\n  }, [enqueueSnackbar]);\n\n  return (\n    <Card>\n      <Box p={isMobile ? 2 : 3}>\n        <Grid container spacing={2}>\n          <Grid item xl={1} sm={1} xs={2}>\n            <Box className={classes.icon}>\n              <AddShoppingCartIcon />\n            </Box>\n          </Grid>\n          <Grid item xl={5} sm={5} xs={4}>\n            <Controller\n              control={control}\n              name=\"weight\"\n              defaultValue={1}\n              rules={{\n                required: '必須項目です。',\n                pattern: {\n                  value: /^[0-9]+$/,\n                  message: '整数を入力してください。',\n                },\n                min: {\n                  value: 1,\n                  message: '1以上, 10以下の整数を入力してください。',\n                },\n                max: {\n                  value: 10,\n                  message: '1以上, 10以下の整数を入力してください。',\n                },\n              }}\n              as={\n                <TextField\n                  label={isMobile ? '重さ' : '重さ (1~10)'}\n                  variant=\"outlined\"\n                  fullWidth\n                  error={!!errors.weight}\n                  helperText={errors.weight?.message}\n                />\n              }\n            />\n          </Grid>\n          <Grid item xl={5} sm={5} xs={4}>\n            <Controller\n              control={control}\n              name=\"worth\"\n              defaultValue={1}\n              rules={{\n                required: '必須項目です。',\n                pattern: {\n                  value: /^[0-9]+$/,\n                  message: '整数を入力してください。',\n                },\n                min: {\n                  value: 1,\n                  message: '1以上10以下の整数を入力してください。',\n                },\n                max: {\n                  value: 100,\n                  message: '0以上100以下の整数を入力してください。',\n                },\n              }}\n              as={\n                <TextField\n                  label={isMobile ? '価値' : '価値 (1~100)'}\n                  variant=\"outlined\"\n                  fullWidth\n                  error={!!errors.worth}\n                  helperText={errors.worth?.message}\n                />\n              }\n            />\n          </Grid>\n          <Grid item xl={1} sm={1} xs={2} container justify=\"flex-end\">\n            <Box className={classes.buttonBox}>\n              <IconButton\n                color=\"primary\"\n                disabled={\n                  condition.eval !== 'BEFORE' && condition.eval !== 'COMPLETE'\n                }\n                onClick={handleSubmit(onSuccess, onError)}\n              >\n                <AddIcon />\n              </IconButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nexport default Form;\n","import { Box, Paper, Grid, Typography } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { RootState } from '../../utils/store';\nimport { ConditionState } from './conditionSlice';\nimport { SizeContext } from '../../component/App';\n\nconst Evaluation: React.FC = () => {\n  const condition = useSelector<RootState, ConditionState>(\n    (state) => state.condition\n  );\n  const { isMobile } = useContext(SizeContext);\n\n  let comment;\n  switch (condition.eval) {\n    case 'BEFORE':\n      comment = '実行前です。';\n      break;\n    case 'OVER':\n      comment = 'アイテムがナップサックに入りません。';\n      break;\n    case 'LOSS':\n      comment = 'アイテムをナップサックに入れると損です。';\n      break;\n    case 'PROFIT':\n      comment = 'アイテムをナップサックに入れると得です。';\n      break;\n    case 'COMPLETE':\n      comment = `ナップサックに詰められる価値は最大で${condition.maxWorth}です。`;\n      break;\n    default:\n      comment = '';\n  }\n\n  return (\n    <Paper>\n      <Box p={isMobile ? 2 : 3}>\n        <Grid container spacing={2}>\n          <Grid item xl={1} sm={1} xs={2} alignItems=\"center\">\n            <InfoOutlinedIcon />\n          </Grid>\n          <Grid item xl={11} sm={11} xs={10} alignItems=\"center\">\n            <Typography variant=\"body1\">{comment}</Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default Evaluation;\n","import {\n  Box,\n  Chip,\n  createStyles,\n  Divider,\n  makeStyles,\n  Theme,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport React, { useMemo } from 'react';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Status } from './tableSlice';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    isInProcess: {\n      backgroundColor: theme.palette.action.disabledBackground,\n    },\n    isProcessed: {\n      backgroundColor: theme.palette.action.hover,\n    },\n    isReffered: {\n      backgroundColor: theme.palette.action.selected,\n    },\n    isBasis: {\n      backgroundColor: theme.palette.action.selected,\n    },\n    tableTd: {\n      border: `1px solid ${theme.palette.divider}`,\n      textAlign: 'center',\n      overflow: 'auto',\n    },\n    chipItem: {\n      marginBottom: theme.spacing(0.5),\n    },\n    chipSummary: {\n      margin: theme.spacing(0.5),\n    },\n  })\n);\n\nconst Square: React.FC<Status> = ({\n  worth,\n  isInProcess,\n  isProcessed,\n  isReffered,\n  isBasis,\n  includedItems,\n}) => {\n  const classes = useStyles();\n  const className = useMemo(() => {\n    if (isInProcess) {\n      return classes.isInProcess;\n    }\n    if (isReffered) {\n      return classes.isReffered;\n    }\n    if (isBasis) {\n      return classes.isBasis;\n    }\n    if (isProcessed) {\n      return classes.isProcessed;\n    }\n    return '';\n  }, [\n    classes.isBasis,\n    classes.isInProcess,\n    classes.isProcessed,\n    classes.isReffered,\n    isBasis,\n    isInProcess,\n    isProcessed,\n    isReffered,\n  ]);\n  return (\n    <Tooltip\n      title={\n        // eslint-disable-next-line no-nested-ternary\n        isProcessed ? (\n          includedItems.length === 0 ? (\n            <Typography variant=\"body2\" align=\"center\">\n              空です\n            </Typography>\n          ) : (\n            <>\n              <Box pt=\"4px\" pb=\"2px\">\n                {includedItems.map((item) => (\n                  <div className={classes.chipItem} key={item.id}>\n                    <Chip\n                      icon={<CheckCircleIcon />}\n                      label={`重さ: ${item.weight}, 価値: ${item.worth}`}\n                      color=\"primary\"\n                    />\n                  </div>\n                ))}{' '}\n              </Box>\n              <Divider />\n              <div className={classes.chipSummary}>\n                <Typography\n                  variant=\"body2\"\n                  align=\"center\"\n                >{`重さ: ${includedItems.reduce(\n                  (acc, cur) => acc + cur.weight,\n                  0\n                )}, 価値: ${includedItems.reduce(\n                  (acc, cur) => acc + cur.worth,\n                  0\n                )}`}</Typography>\n              </div>\n            </>\n          )\n        ) : (\n          ''\n        )\n      }\n    >\n      <td className={`${className} ${classes.tableTd}`}>\n        <Typography variant=\"body1\">\n          {isProcessed ? worth.toString() : ''}\n        </Typography>\n      </td>\n    </Tooltip>\n  );\n};\n\nexport default Square;\n","import React, { useCallback, useContext } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, Paper, Chip, Grid, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\nimport Square from './Square';\nimport tableSlice, { Status, Coordiante } from './tableSlice';\nimport { RootState } from '../../utils/store';\nimport conditionSlice, {\n  Eval,\n  ConditionState,\n  Item,\n} from '../condition/conditionSlice';\nimport { SizeContext } from '../../component/App';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paperTitle: {\n      marginLeft: theme.spacing(1),\n    },\n    dpTable: {\n      width: '100%',\n      tableLayout: 'fixed',\n      borderCollapse: 'collapse',\n    },\n    buttons: {\n      marginTop: theme.spacing(2),\n      '& > *': {\n        marginLeft: theme.spacing(3),\n      },\n    },\n    trData: {\n      height: '50px',\n    },\n    thIndex: {\n      width: '28.5%',\n      maxWidth: '300px',\n      overflow: 'auto',\n    },\n    thColumn: {\n      height: '50px',\n      width: '6.5%',\n      minWidth: '6.5%',\n      maxWidth: '6.5%',\n    },\n    tableLabel: {\n      marginLeft: 'calc(67.5% - 4.5rem)',\n    },\n    emptyChip: {\n      paddingLeft: '2.5rem',\n      paddingRight: '2.5rem',\n      [theme.breakpoints.down('sm')]: {\n        paddingLeft: 'initial',\n        paddingRight: 'initial',\n      },\n    },\n    itemChip: {\n      animationName: '$fadeIn',\n      animationDuration: '.3s',\n      animationTimingFunction: 'ease-in-out',\n    },\n    '@keyframes fadeIn': {\n      '0%': {\n        opacity: 0,\n      },\n      '100%': {\n        opacity: 1,\n      },\n    },\n  })\n);\n\nconst DpTable: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const { isMobile } = useContext(SizeContext);\n\n  // state\n  const table = useSelector<RootState, Status[][]>((state) => state.table);\n  const condition = useSelector<RootState, ConditionState>(\n    (state) => state.condition\n  );\n\n  const { capacity, items } = condition;\n\n  // method\n  const updateMaxWorth = useCallback(\n    (newMaxworth: number) => {\n      dispatch(conditionSlice.actions.setMaxWorth(newMaxworth));\n    },\n    [dispatch]\n  );\n\n  const updateEval = useCallback(\n    (newEval: Eval) => {\n      dispatch(conditionSlice.actions.setEval(newEval));\n    },\n    [dispatch]\n  );\n\n  const updateProcessed = useCallback(\n    (newProcessed: { index: number; isProcessed: boolean }) => {\n      dispatch(conditionSlice.actions.setProcessed(newProcessed));\n    },\n    [dispatch]\n  );\n\n  const updateTable = useCallback(\n    (newTable: Status[][]) => {\n      dispatch(tableSlice.actions.setTable(newTable));\n    },\n    [dispatch]\n  );\n\n  const resetCondition = useCallback(() => {\n    dispatch(conditionSlice.actions.resetCondition());\n  }, [dispatch]);\n\n  const resetTable = useCallback(() => {\n    dispatch(tableSlice.actions.resetTable());\n  }, [dispatch]);\n\n  const handleDelete = useCallback(\n    (item: Item) => {\n      dispatch(conditionSlice.actions.delItem(item));\n      dispatch(conditionSlice.actions.setEval('BEFORE'));\n      resetTable();\n      enqueueSnackbar('アイテムを削除しました。', { variant: 'success' });\n    },\n    [dispatch, enqueueSnackbar, resetTable]\n  );\n\n  /**\n   * 再帰的にdp tableを更新する関数\n   * @param prevTable 一つ前のイテレーションで更新されたdp table\n   * @param interval 更新のインターバル (ms)\n   * @param prevCurr 一つ前のイテレーションで更新したマスの座標\n   * @param prevPrev 一つ前のイテレーションから見た一つ前のイテレーションで更新したマスの座標\n   * @param prevRef 一つ前のイテレーションで残分埋めに参照したマスの座標\n   * @param prevBasis 一つ前のイテレーションで総価値の比較に参照したマスの座標\n   */\n  const recUpdate = useCallback(\n    (\n      prevTable: Status[][],\n      interval: number,\n      prevCurr: Coordiante,\n      prevPrev: Coordiante,\n      prevRef: Coordiante,\n      prevBasis: Coordiante\n    ) => {\n      if (prevCurr.i === items.length) {\n        updateMaxWorth(prevTable[prevPrev.i][prevPrev.j].worth);\n        updateEval('COMPLETE');\n        return;\n      }\n      // 更新用に新しいテーブルを作成\n      const newTable: Status[][] = [[]];\n      prevTable.forEach((row, i) => {\n        newTable[i] = row.slice();\n      });\n      // 次のイテレーション用に引数をコピー\n      const newCurr = { ...prevCurr };\n      const newPrev = { ...prevPrev };\n      let newRef = { ...prevRef };\n      let newBasis = { ...prevBasis };\n\n      // Conditionの更新\n      updateProcessed({ index: prevCurr.i, isProcessed: true });\n\n      // ひとつ前の処理のハイライトの初期化\n      newTable[prevPrev.i][prevPrev.j] = {\n        ...newTable[prevPrev.i][prevPrev.j],\n        isInProcess: false,\n      };\n      newTable[prevRef.i][prevRef.j] = {\n        ...newTable[prevRef.i][prevRef.j],\n        isReffered: false,\n      };\n      newTable[prevBasis.i][prevBasis.j] = {\n        ...newTable[prevBasis.i][prevBasis.j],\n        isBasis: false,\n      };\n\n      // 評価\n      let newWorth = 0;\n      const includedItems = [];\n      // itemがknapsackに入る場合\n      if (prevCurr.j >= items[prevCurr.i].weight) {\n        newRef = {\n          i: prevCurr.i,\n          j: prevCurr.j - items[prevCurr.i].weight,\n        };\n        newTable[newRef.i][newRef.j] = {\n          ...newTable[newRef.i][newRef.j],\n          isReffered: true,\n        };\n        newBasis = { i: prevCurr.i, j: prevCurr.j };\n        newTable[newBasis.i][newBasis.j] = {\n          ...newTable[newBasis.i][newBasis.j],\n          isBasis: true,\n        };\n        // itemをknapsackに入れるべきか評価する\n        if (\n          newTable[prevCurr.i][prevCurr.j - items[prevCurr.i].weight].worth +\n            items[prevCurr.i].worth >=\n          newTable[prevCurr.i][prevCurr.j].worth\n        ) {\n          // itemをknapsackに入れたほうが得な場合\n          newWorth =\n            newTable[prevCurr.i][prevCurr.j - items[prevCurr.i].weight].worth +\n            items[prevCurr.i].worth;\n          includedItems.push(\n            ...newTable[prevCurr.i][prevCurr.j - items[prevCurr.i].weight]\n              .includedItems,\n            items[prevCurr.i]\n          );\n          updateEval('PROFIT');\n        } else {\n          // itemをknapsackに入れると損な場合\n          newWorth = newTable[prevCurr.i][prevCurr.j].worth;\n          includedItems.push(...newTable[prevCurr.i][prevCurr.j].includedItems);\n          updateEval('LOSS');\n        } // itemがknapsackに入らない場合\n      } else {\n        newWorth = newTable[prevCurr.i][prevCurr.j].worth;\n        includedItems.push(...newTable[prevCurr.i][prevCurr.j].includedItems);\n        updateEval('OVER');\n      }\n      // 評価結果をもとにtableを更新\n      newTable[prevCurr.i + 1][prevCurr.j] = {\n        worth: newWorth,\n        isInProcess: true,\n        isProcessed: true,\n        isReffered: false,\n        isBasis: false,\n        includedItems,\n      };\n      updateTable(newTable);\n\n      // 次のマスへindexを更新\n      newPrev.i = prevCurr.i + 1;\n      newPrev.j = prevCurr.j;\n      newCurr.j = prevCurr.j + 1;\n      if (newCurr.j === capacity + 1) {\n        newCurr.j = 0;\n        newCurr.i += 1;\n      }\n\n      setTimeout(\n        () => recUpdate(newTable, interval, newCurr, newPrev, newRef, newBasis),\n        interval\n      );\n    },\n    [capacity, items, updateEval, updateProcessed, updateMaxWorth, updateTable]\n  );\n\n  // isInProcessのマスを0.1sec毎に走査する関数\n  const scanTable = useCallback(() => {\n    // 再帰関数の引数の初期値\n    const intervalTime = 300;\n    const currCoord = { i: 0, j: 0 };\n    const prevCoord = { i: items.length, j: capacity };\n    const refCoord = { i: 0, j: 0 }; // アイテムを入れたあまりを最適化するボックス\n    const basisCoord = { i: 0, j: 0 }; // 一つ左のボックス\n\n    const newTable: Status[][] = [[]];\n    table.forEach((row, i) => {\n      newTable[i] = table[i].slice();\n    });\n\n    // 再帰関数の呼び出し\n    recUpdate(\n      newTable,\n      intervalTime,\n      currCoord,\n      prevCoord,\n      refCoord,\n      basisCoord\n    );\n  }, [capacity, items.length, recUpdate, table]);\n\n  /**\n   * マスを描画する関数\n   * @param status マスのstatus\n   * @param i マスのインデックス (x座標)\n   * @param j マスのインデックス (y座標)\n   */\n  const renderSquare = useCallback((status: Status, i: number, j: number) => {\n    return (\n      <Square\n        key={`square-${i * 11 + j}`}\n        worth={status.worth}\n        isInProcess={status.isInProcess}\n        isProcessed={status.isProcessed}\n        isReffered={status.isReffered}\n        isBasis={status.isBasis}\n        includedItems={status.includedItems}\n      />\n    );\n  }, []);\n\n  /**\n   * tableのi行目を描画する関数\n   * @param i 何行目か\n   */\n  const renderRow = useCallback(\n    (i: number) => {\n      return (\n        <tr key={`table-row-${i}`} className={classes.trData}>\n          {i === 0 ? (\n            <th className={classes.thIndex}>\n              <Chip\n                label=\"空の状態\"\n                variant=\"outlined\"\n                className={classes.emptyChip}\n              />\n            </th>\n          ) : (\n            <th className={classes.thIndex}>\n              {items[i - 1] !== undefined ? (\n                <Chip\n                  icon={\n                    // eslint-disable-next-line no-nested-ternary\n                    isMobile ? undefined : items[i - 1].isProcessed ? (\n                      <CheckCircleIcon />\n                    ) : (\n                      <RemoveCircleIcon />\n                    )\n                  }\n                  label={`${isMobile ? '重' : '重さ: '}${\n                    items[i - 1].weight\n                  }, ${isMobile ? '価' : '価値: '}${items[i - 1].worth}`}\n                  color={items[i - 1].isProcessed ? 'primary' : 'secondary'}\n                  className={classes.itemChip}\n                  onDelete={\n                    condition.eval !== 'BEFORE' && condition.eval !== 'COMPLETE'\n                      ? undefined\n                      : () => handleDelete(items[i - 1])\n                  }\n                />\n              ) : null}\n            </th>\n          )}\n          {table[i].map((square, j) => renderSquare(square, i, j))}\n        </tr>\n      );\n    },\n    [\n      classes.emptyChip,\n      classes.itemChip,\n      classes.thIndex,\n      classes.trData,\n      condition.eval,\n      handleDelete,\n      isMobile,\n      items,\n      renderSquare,\n      table,\n    ]\n  );\n\n  /**\n   * tableのカラム名を描画する関数\n   * @param column 何カラム目か\n   */\n  const renderColumnNameRow = useCallback(\n    (column: number) => {\n      const row = [\n        // eslint-disable-next-line jsx-a11y/control-has-associated-label\n        <th\n          className={classes.thIndex}\n          key={`table-column-name-row-${column}`}\n        />,\n      ];\n      for (let i = 0; i <= column; i += 1) {\n        row.push(\n          <th className={classes.thColumn} key={i}>\n            {i}\n          </th>\n        );\n      }\n      return <tr>{row}</tr>;\n    },\n    [classes.thColumn, classes.thIndex]\n  );\n\n  return (\n    <Paper>\n      <Box p={isMobile ? 2 : 3}>\n        <Grid container spacing={2}>\n          <Grid item xl={1} sm={1} xs={1}>\n            <Box>\n              <ViewComfyIcon />\n            </Box>\n          </Grid>\n          <Grid item xl={12} sm={12} xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xl={12} xs={12}>\n                <Box className={classes.tableLabel}>\n                  <Typography variant=\"h5\">ナップサックの容量</Typography>\n                </Box>\n              </Grid>\n              <Grid item xl={12} xs={12}>\n                <table className={classes.dpTable}>\n                  <tbody>\n                    {renderColumnNameRow(10)}\n                    {table.map((_, i) => renderRow(i))}\n                  </tbody>\n                </table>\n              </Grid>\n              <Grid item xl={12} xs={12} container justify=\"flex-end\">\n                <Box className={classes.buttons}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={condition.eval !== 'COMPLETE'}\n                    onClick={() => {\n                      resetCondition();\n                      resetTable();\n                    }}\n                  >\n                    RESET\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={\n                      (condition.eval !== 'BEFORE' &&\n                        condition.eval !== 'COMPLETE') ||\n                      condition.items.length === 0\n                    }\n                    onClick={() => {\n                      resetTable();\n                      scanTable();\n                    }}\n                  >\n                    START\n                  </Button>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default DpTable;\n","import { Container, createStyles, Grid, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport Knapsack from '../features/condition/Knapsack';\nimport Form from '../features/condition/Form';\nimport Evaluation from '../features/condition/Evaluation';\nimport DpTable from '../features/dpTable/DpTable';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      marginBottom: '16px',\n      overflow: 'auto',\n    },\n    mainContents: {\n      marginTop: 0,\n      marginBottom: 0,\n    },\n  })\n);\nconst Contents: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\" className={classes.root}>\n      <Grid container spacing={3} className={classes.mainContents}>\n        <Grid item xl={12} xs={12}>\n          <Knapsack />\n        </Grid>\n        <Grid item xl={12} xs={12}>\n          <Form />\n        </Grid>\n        <Grid item xl={12} xs={12}>\n          <Evaluation />\n        </Grid>\n        <Grid item xl={12} xs={12}>\n          <DpTable />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Contents;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormControllLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport themeSlice from './themeSlice';\nimport { AppDispatch, RootState } from '../../utils/store';\n\nconst ThemeSwitch: React.FC = () => {\n  const { toggleTheme } = themeSlice.actions;\n  const isDarkTheme = useSelector<RootState, boolean>(\n    (state) => state.theme.isDarkTheme\n  );\n  const dispatch: AppDispatch = useDispatch();\n\n  return (\n    <FormControllLabel\n      control={\n        <Switch\n          checked={isDarkTheme}\n          color=\"default\"\n          inputProps={{ 'aria-label': 'theme-switch' }}\n          onClick={() => dispatch(toggleTheme())}\n        />\n      }\n      label={isDarkTheme ? '🌝' : '🌞'}\n    />\n  );\n};\n\nexport default ThemeSwitch;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\nimport ThemeSwitch from '../features/theme/ThemeSwitch';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      marginBottom: theme.spacing(2),\n    },\n    title: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(4),\n    },\n    menu: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n  })\n);\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" elevation={0} color=\"transparent\">\n        <ToolBar>\n          <ViewComfyIcon />\n          <Typography variant=\"h4\" className={classes.title}>\n            DP Table Visualizer\n          </Typography>\n          <div className={classes.menu}>\n            <ThemeSwitch />\n          </div>\n        </ToolBar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textAlign: 'right',\n    },\n    icon: {\n      margin: '8px 16px 16px 0px',\n    },\n    link: {\n      textDecoration: 'none',\n      color: theme.palette.text.primary,\n      '&:hover': {\n        color: theme.palette.secondary.main,\n      },\n    },\n  })\n);\n\nconst Footer: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.root}>\n      <Box className={classes.icon}>\n        <a\n          href=\"https://github.com/yokotani92/dp-visualizer\"\n          className={classes.link}\n        >\n          <GitHubIcon />\n        </a>\n      </Box>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Provider, useSelector } from 'react-redux';\nimport {\n  CssBaseline,\n  ThemeProvider,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\nimport store, { RootState } from '../utils/store';\nimport theme from '../utils/theme';\nimport Contents from './Contents';\nimport Header from './Header';\nimport Footer from './Footer';\n\nexport const SizeContext = React.createContext({\n  isMobile: false,\n  isDesktop: false,\n});\n\nconst StyledApp: React.FC = () => {\n  const isMobile = useMediaQuery(useTheme().breakpoints.down('sm'));\n  const isDesktop = useMediaQuery(useTheme().breakpoints.up('lg'));\n\n  const mode = useSelector<RootState, boolean>(\n    (state) => state.theme.isDarkTheme\n  )\n    ? 'dark'\n    : 'light';\n\n  return (\n    <ThemeProvider theme={theme(mode)}>\n      <SizeContext.Provider value={{ isMobile, isDesktop }}>\n        <SnackbarProvider>\n          <CssBaseline />\n          <Header />\n          <Contents />\n          <Footer />\n        </SnackbarProvider>\n      </SizeContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <StyledApp />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}